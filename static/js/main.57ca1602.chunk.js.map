{"version":3,"sources":["pages/Home.js","pages/Details.js","pages/Error.js","redux/data/data.js","components/App.js","reportWebVitals.js","redux/configureStore.js","index.js"],"names":["Home","data","useSelector","state","name","today_open_cases","regions","map","region","to","id","Details","props","console","log","Error","LOAD_DATA","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","workingDate","url","initialState","dataReducer","action","type","payload","App","dispatch","useDispatch","useEffect","a","fetch","then","response","json","fetchedData","dates","countries","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"0NA2BeA,EAvBF,WAEX,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAE1C,OACE,qCACE,6BAAKA,EAAKG,OACV,mDACA,+BAAOH,EAAKI,mBACZ,0CACA,6BACGJ,EAAKK,QAAQC,KAAI,SAACC,GAAD,OAChB,6BACE,cAAC,IAAD,CAAMC,GAAE,WAAMD,EAAOE,IAArB,SACGF,EAAOJ,QAFHI,EAAOE,aCAXC,EAdC,SAACC,GAIf,OAFAC,QAAQC,IAAIF,GAGV,qCACE,oEAAqCA,EAAMJ,OAAOJ,QAClD,4BANQ,YAOR,mDACA,+BAAOQ,EAAMJ,OAAOH,uBCGXU,EAZD,WAIZ,OACE,qCACE,6BALU,2BAMV,4BALQ,gB,yBCJRC,EAAY,qBAEZC,EAAc,IAAIC,KAClBC,EAAcF,EAAYG,cAC1BC,EAAeJ,EAAYK,WAAa,EACxCC,EAAaN,EAAYO,UAAY,EAC9BC,EAAW,UAAMN,EAAN,YAAqBE,EAArB,YAAqCE,GAEvDG,EAAG,wDAAoDD,EAApD,2BAEHE,EAAe,CACnBrB,QAAS,CACP,CACEF,KAAM,YACNM,GAAI,aAEN,CACEN,KAAM,WACNM,GAAI,YAEN,CACEN,KAAM,kBACNM,GAAI,mBAEN,CACEN,KAAM,gBACNM,GAAI,iBAEN,CACEN,KAAM,iBACNM,GAAI,kBAEN,CACEN,KAAM,aACNM,GAAI,cAEN,CACEN,KAAM,cACNM,GAAI,eAEN,CACEN,KAAM,UACNM,GAAI,WAEN,CACEN,KAAM,UACNM,GAAI,WAEN,CACEN,KAAM,QACNM,GAAI,WAyBKkB,EApBK,WAAmC,IAAlCzB,EAAiC,uDAAzBwB,EAAcE,EAAW,uCACpD,OAAQA,EAAOC,OACRd,EACIa,EAAOE,QAEP5B,GC1BE6B,EA1BH,WACV,IAAMC,EAAWC,cAEjBC,qBAAU,WACRF,EDyDmB,uCAAM,WAAOA,GAAP,eAAAG,EAAA,sEACDC,MAAMX,GAC7BY,MAAK,SAACC,GAAD,OAAcA,EAASC,UAFJ,OACrBC,EADqB,OAG3BR,GARuBF,EAQLU,EAAYC,MAAMjB,GAAakB,UAAU,kBARvB,CACpCb,KAAMd,EACNe,aAG2B,iCALL,IAACA,IAKI,OAAN,yDCxDlB,CAACE,IAEJ,IAAM3B,EAAUJ,aAAY,SAACC,GAAD,OAAWA,EAAMF,KAAKK,WAElD,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEDvC,EAAQC,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,CAAiCqC,KAAI,WAAMrC,EAAOE,IAAlD,SACE,cAAC,EAAD,CAASF,OAAQA,KADnB,UAAeA,EAAOE,GAAtB,aAIF,cAAC,IAAD,CAAOmC,KAAK,IAAZ,SACE,cAAC,EAAD,UChBOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCFRO,EAAcC,YAAgB,CAClCtD,KAAM2B,IAQO4B,EALDC,YACZH,EACAI,YAAgBC,SAAQC,MCF1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAUC,iBAAlB,SACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINU,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.57ca1602.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  \n  const data = useSelector((state) => state.data);\n\n  return (\n    <>\n      <h1>{data.name}</h1>\n      <p>Open cases today: </p>\n      <span>{data.today_open_cases}</span>\n      <h2>Regions:</h2>\n      <ul>\n        {data.regions.map((region) => (\n          <li key={region.id}>\n            <Link to={`/${region.id}`}>\n              {region.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;","import React from 'react';\n\nconst Details = (props) => {\n  const msg = 'Welcome';\n  console.log(props);\n\n  return (\n    <>\n      <h1>{`This is the details page for ${props.region.name}`}</h1>\n      <p>{msg}</p>\n      <p>Today open Cases: </p>\n      <span>{props.region.today_open_cases}</span>\n    </>\n  );\n};\n\nexport default Details;","import React from 'react';\n\nconst Error = () => {\n  const title = 'This is the error page';\n  const msg = 'Welcome';\n\n  return (\n    <>\n      <h1>{title}</h1>\n      <p>{msg}</p>\n    </>\n  );\n};\n\nexport default Error;\n","const LOAD_DATA = 'App/data/LOAD_DATA';\n\nconst currentDate = new Date();\nconst currentYear = currentDate.getFullYear();\nconst currentMonth = currentDate.getMonth() + 1;\nconst currentDay = currentDate.getDate() - 1;\nexport const workingDate = `${currentYear}-${currentMonth}-${currentDay}`;\n\nconst url = `https://api.covid19tracking.narrativa.com/api/${workingDate}/country/united_kingdom`;\n\nconst initialState = {\n  regions: [\n    {\n      name: 'Gibraltar',\n      id: 'gibraltar',\n    },\n    {\n      name: 'Scotland',\n      id: 'scotland',\n    },\n    {\n      name: 'Channel Islands',\n      id: 'channel_islands',\n    },\n    {\n      name: 'North Ireland',\n      id: 'north_ireland',\n    },\n    {\n      name: 'Cayman Islands',\n      id: 'cayman_islands',\n    },\n    {\n      name: 'Montserrat',\n      id: 'montserrat',\n    },\n    {\n      name: 'Isle of Man',\n      id: 'isle_of_man',\n    },\n    {\n      name: 'Bermuda',\n      id: 'bermuda',\n    },\n    {\n      name: 'England',\n      id: 'england',\n    },\n    {\n      name: 'Wales',\n      id: 'wales',\n    },\n  ],\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const loadData = (payload) => ({\n  type: LOAD_DATA,\n  payload,\n});\n\nexport const getData = () => async (dispatch) => {\n  const fetchedData = await fetch(url)\n    .then((response) => response.json());\n  dispatch(loadData(fetchedData.dates[workingDate].countries['United Kingdom']));\n};\n\nexport default dataReducer;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Home from '../pages/Home';\nimport Details from '../pages/Details';\nimport Error from '../pages/Error';\nimport { getData } from '../redux/data/data';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]);\n\n  const regions = useSelector((state) => state.data.regions);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      {regions.map((region) => (\n        <Route key={`${region.id}#path`} path={`/${region.id}`}>\n          <Details region={region} />\n        </Route>\n      ))}\n      <Route path=\"*\">\n        <Error />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport dataReducer from './data/data';\n\nconst rootReducer = combineReducers({\n  data: dataReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(logger, thunk),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}