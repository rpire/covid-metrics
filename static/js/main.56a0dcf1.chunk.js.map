{"version":3,"sources":["redux/data/data.js","components/HomeNavbar.js","components/Region.js","pages/Home.js","components/DetailsNavbar.js","pages/Details.js","pages/Error.js","App.js","reportWebVitals.js","redux/configureStore.js","index.js"],"names":["date","HomeNavbar","props","search","handleChange","className","onSubmit","e","preventDefault","htmlFor","type","id","name","value","onChange","placeholder","Region","region","confirmedCases","today_confirmed","regionID","includes","src","process","concat","alt","Home","data","useSelector","state","useState","setSearch","filteredRegions","regions","sort","a","b","today_open_cases","filter","toLowerCase","event","target","map","to","indexOf","DetailsNavbar","Details","confirmed","newConfirmed","today_new_confirmed","deaths","today_deaths","newDeaths","today_new_deaths","open","newOpen","today_new_open_cases","recovered","today_recovered","newRecovered","today_new_recovered","Error","LOAD_DATA","formatNum","num","toString","padStart","DATE","Date","YESTERDAY","getFullYear","getMonth","getDate","join","url","initialState","dataReducer","action","payload","App","dispatch","useDispatch","useEffect","fetch","then","response","json","catch","fetchedData","dates","countries","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.56a0dcf1.chunk.js","sourcesContent":["const LOAD_DATA = 'App/data/LOAD_DATA';\n\nconst formatNum = (num) => num.toString().padStart(2, '0');\n\nconst formatDate = (date) => {\n  const formattedDate = [\n    date.getFullYear().toString(),\n    formatNum(date.getMonth() + 1).toString(),\n    formatNum(date.getDate() - 1).toString(),\n  ];\n\n  return formattedDate.join('-');\n};\n\nconst DATE = new Date();\nconst YESTERDAY = formatDate(DATE);\n\nconst url = `https://api.covid19tracking.narrativa.com/api/${YESTERDAY}/country/united_kingdom`;\n\nconst initialState = {\n  regions: [\n    {\n      name: 'Gibraltar',\n      id: 'gibraltar',\n    },\n    {\n      name: 'Scotland',\n      id: 'scotland',\n    },\n    {\n      name: 'Channel Islands',\n      id: 'channel_islands',\n    },\n    {\n      name: 'North Ireland',\n      id: 'north_ireland',\n    },\n    {\n      name: 'Cayman Islands',\n      id: 'cayman_islands',\n    },\n    {\n      name: 'Montserrat',\n      id: 'montserrat',\n    },\n    {\n      name: 'Isle of Man',\n      id: 'isle_of_man',\n    },\n    {\n      name: 'Bermuda',\n      id: 'bermuda',\n    },\n    {\n      name: 'England',\n      id: 'england',\n    },\n    {\n      name: 'Wales',\n      id: 'wales',\n    },\n  ],\n  name: 'United Kingdom',\n  id: 'united_kingdom',\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const loadData = (payload) => ({\n  type: LOAD_DATA,\n  payload,\n});\n\nexport const getData = () => async (dispatch) => {\n  const fetchedData = await fetch(url)\n    .then((response) => response.json())\n    .catch(() => initialState);\n  dispatch(loadData(fetchedData.dates[YESTERDAY].countries['United Kingdom']));\n};\n\nexport default dataReducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoSearch } from 'react-icons/go';\n\nconst HomeNavbar = (props) => {\n  const {\n    search,\n    handleChange,\n  } = props;\n\n  return (\n    <nav className=\"flex-box\">\n      <span className=\"nav-title\">UK</span>\n      <span className=\"nav-center\">most cases</span>\n      <form className=\"input-container flex-box\" onSubmit={(e) => e.preventDefault()}>\n        <label htmlFor=\"search\" className=\"flex-box\">\n          <input\n            type=\"text\"\n            id=\"search\"\n            name=\"search\"\n            value={search}\n            onChange={handleChange}\n            placeholder=\"Search region\"\n          />\n          <GoSearch />\n        </label>\n      </form>\n    </nav>\n  );\n};\n\nHomeNavbar.propTypes = {\n  search: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default HomeNavbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FiArrowRightCircle } from 'react-icons/fi';\n\nconst Region = (props) => {\n  const {\n    region: {\n      name,\n      today_confirmed: confirmedCases,\n      id: regionID,\n    },\n    id,\n  } = props;\n\n  const darkElements = [0, 3, 4, 7, 8];\n\n  return (\n    <div className={darkElements.includes(id) ? 'dark-region' : 'light-region'}>\n      <div className=\"region-img-frame flex-box\">\n        <img\n          src={process.env.PUBLIC_URL.concat(`/media/${regionID}.png`)}\n          alt=\"Region map\"\n          className=\"region-img\"\n        />\n        <FiArrowRightCircle className=\"details-link\" />\n      </div>\n      <div className=\"region-content flex-box\">\n        <h3>{name}</h3>\n        <p>Confirmed cases</p>\n        <span>{confirmedCases}</span>\n      </div>\n    </div>\n  );\n};\n\nRegion.propTypes = {\n  region: PropTypes.instanceOf(Object).isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Region;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport HomeNavbar from '../components/HomeNavbar';\nimport Region from '../components/Region';\n\nconst Home = () => {\n  const data = useSelector((state) => state.data);\n\n  const [search, setSearch] = useState('');\n\n  const handleChange = (event) => setSearch(event.target.value);\n\n  const filteredRegions = data.regions.sort((a, b) => b.today_open_cases - a.today_open_cases)\n    .filter((region) => region.name.toLowerCase()\n      .includes(search.toLowerCase()));\n\n  return (\n    <>\n      <HomeNavbar\n        search={search}\n        handleChange={handleChange}\n      />\n      <section className=\"main-container flex-box\">\n        <img\n          src={process.env.PUBLIC_URL.concat(`/media/${data.id}.png`)}\n          alt={`Map silhouette for ${data.name}`}\n          className=\"main-img\"\n        />\n        <div className=\"main-content flex-box\">\n          <h1>{data.name}</h1>\n          <p>Confirmed cases</p>\n          <span>{data.today_confirmed}</span>\n        </div>\n      </section>\n      <section>\n        <h2>STATS BY REGION</h2>\n        <ul className=\"region-list\">\n          {filteredRegions.map((region) => (\n            <li key={region.id}>\n              <Link to={`/${region.id}`}>\n                <Region\n                  region={region}\n                  id={filteredRegions.indexOf(region)}\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MdOutlineKeyboardArrowLeft } from 'react-icons/md';\n\nconst DetailsNavbar = (props) => {\n  const { name } = props;\n\n  return (\n    <nav className=\"flex-box\">\n      <Link to=\"/\">\n        <MdOutlineKeyboardArrowLeft className=\"nav-return\" />\n      </Link>\n      <span className=\"nav-end\">\n        {`${name} metrics`}\n      </span>\n    </nav>\n  );\n};\n\nDetailsNavbar.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default DetailsNavbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IoPersonSharp } from 'react-icons/io5';\nimport DetailsNavbar from '../components/DetailsNavbar';\n\nconst Details = (props) => {\n  const {\n    region: {\n      id,\n      name,\n      today_confirmed: confirmed,\n      today_new_confirmed: newConfirmed,\n      today_deaths: deaths,\n      today_new_deaths: newDeaths,\n      today_open_cases: open,\n      today_new_open_cases: newOpen,\n      today_recovered: recovered,\n      today_new_recovered: newRecovered,\n    },\n  } = props;\n\n  return (\n    <>\n      <DetailsNavbar name={name} />\n      <section className=\"main-container flex-box\">\n        <img\n          src={`./media/${id}.png`}\n          alt={`Map silhouette for ${name}`}\n          className=\"main-img\"\n        />\n        <div className=\"main-content flex-box\">\n          <h1>{name}</h1>\n          <p>Confirmed cases</p>\n          <span>{confirmed}</span>\n        </div>\n      </section>\n      <section>\n        <h2>DETAILS</h2>\n        <ul className=\"details-list\">\n          <li className=\"details-list-item flex-box even\">\n            <span>CONFIRMED CASES</span>\n            <span className=\"counter flex-box\">\n              {confirmed}\n              <IoPersonSharp />\n            </span>\n          </li>\n          <li className=\"details-list-item flex-box odd\">\n            <span>NEW CONFIRMED CASES</span>\n            <span className=\"counter flex-box\">\n              {newConfirmed}\n              <IoPersonSharp />\n            </span>\n          </li>\n          <li className=\"details-list-item flex-box even\">\n            <span>DEATHS</span>\n            <span className=\"counter flex-box\">\n              {deaths}\n              <IoPersonSharp />\n            </span>\n          </li>\n          <li className=\"details-list-item flex-box odd\">\n            <span>NEW DEATHS</span>\n            <span className=\"counter flex-box\">\n              {newDeaths}\n              <IoPersonSharp />\n            </span>\n          </li>\n          <li className=\"details-list-item flex-box even\">\n            <span>OPEN CASES</span>\n            <span className=\"counter flex-box\">\n              {open}\n              <IoPersonSharp />\n            </span>\n          </li>\n          <li className=\"details-list-item flex-box odd\">\n            <span>NEW OPEN CASES</span>\n            <span className=\"counter flex-box\">\n              {newOpen}\n              <IoPersonSharp />\n            </span>\n          </li>\n          <li className=\"details-list-item flex-box even\">\n            <span>RECOVERED</span>\n            <span className=\"counter flex-box\">\n              {recovered}\n              <IoPersonSharp />\n            </span>\n          </li>\n          <li className=\"details-list-item flex-box odd\">\n            <span>NEW RECOVERED</span>\n            <span className=\"counter flex-box\">\n              {newRecovered}\n              <IoPersonSharp />\n            </span>\n          </li>\n        </ul>\n      </section>\n    </>\n  );\n};\n\nDetails.propTypes = {\n  region: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Details;\n","import React from 'react';\n\nconst Error = () => {\n  const title = 'This is the error page';\n  const msg = 'Welcome';\n\n  return (\n    <>\n      <h1>{title}</h1>\n      <p>{msg}</p>\n    </>\n  );\n};\n\nexport default Error;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Home from './pages/Home';\nimport Details from './pages/Details';\nimport Error from './pages/Error';\nimport { getData } from './redux/data/data';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]);\n\n  const regions = useSelector((state) => state.data.regions);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      {regions.map((region) => (\n        <Route key={`${region.id}#path`} path={`/${region.id}`}>\n          <Details region={region} />\n        </Route>\n      ))}\n      <Route path=\"*\">\n        <Error />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport dataReducer from './data/data';\n\nconst rootReducer = combineReducers({\n  data: dataReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(logger, thunk),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}